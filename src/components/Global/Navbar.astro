---
import { Image } from "astro:assets";
import Plant from "@assets/images/Plant.svg";

const menu = [
  { label: "Accueil", href: "/" },
  { label: "A Propos", href: "/a-propos" },
];
---

<header>
  <nav role="navigation" aria-label="Main navigation">
    <a href="/" id="logo">Jeannelle</a>
    <div class="desktop-menu">
      <ul>
        {
          menu.map((item) => (
            <li>
              <a href={item.href}>{item.label}</a>
            </li>
          ))
        }
      </ul>
    </div>
    <div class="mobile-menu">
      <button
        class="menu-button"
        id="menu-button"
        aria-expanded="false"
        aria-controls="nav-menu"
        aria-label="Ouvrir le menu"
      >
        <span></span>
        <span></span>
        <span></span>
      </button>
      <ul class="menu" id="nav-menu" role="menu">
        {
          menu.map((item) => (
            <li role="none">
              <a role="menuitem" href={item.href}>
                {item.label}
              </a>
            </li>
          ))
        }
        <li role="none">
          <Image src={Plant} alt="Plant" id="plant" />
        </li>
      </ul>
    </div>
  </nav>
</header>

<script>
  function listenMenu() {
    const buttonMenu = document.getElementById("menu-button");
    const menuEl = document.getElementById("nav-menu");
    const body = document.querySelector("body");

    if (!buttonMenu || !menuEl) return;

    const setExpanded = (value) => {
      buttonMenu.setAttribute("aria-expanded", String(value));
    };

    const toggleMenu = () => {
      menuEl.classList.toggle("show");
      buttonMenu.classList.toggle("active");
      body.classList.toggle("no-scroll");
      setExpanded(menuEl.classList.contains("show"));
    };

    buttonMenu.addEventListener("click", (e) => {
      e.stopPropagation();
      toggleMenu();
    });

    menuEl.addEventListener("click", (e) => {
      const target = /** @type {HTMLElement} */ (e.target);
      if (target && target.tagName === "A") {
        toggleMenu();
      }
    });

    document.addEventListener("keydown", (e) => {
      if (e.key === "Escape" && menuEl.classList.contains("show")) {
        toggleMenu();
        buttonMenu.focus();
      }
    });
  }

  document.addEventListener("DOMContentLoaded", listenMenu);
  document.addEventListener("astro:after-swap", listenMenu);
</script>

<style lang="scss">
  @use "@styles/config/variables" as *;
  @use "@styles/config/mixins" as *;

  header {
    width: 100%;
    height: 10vh;
    margin: 0.5rem 0;
    position: relative;
    background-color: white;
  }

  nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 90%;
    height: 100%;
    margin: 0rem auto;
    a {
      text-decoration: none;
      font-size: 1.4rem;
      transition: 0.5s ease-in-out;
      font-weight: 600;
      color: var(--text-primary-color);
    }
    a:visited {
      color: var(--text-primary-color);
    }
    a:hover {
      color: var(--important-color);
      transition: 0.5s ease-in-out;
    }
  }

  #logo {
    font-size: var(--big-text);
    font-family: var(--title);
    font-weight: 900;
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
  }

  .menu-button {
    height: 30px;
    width: 30px;
    position: relative;
    background-color: transparent;
    border: none;
    span {
      height: 3px;
      width: 100%;
      background-color: black;
      border-radius: 25px;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      transition: 0.2s ease;
    }
    span:first-child {
      top: 25%;
    }
    span:last-child {
      top: 75%;
    }
  }

  .active {
    span:first-child {
      top: 50%;
      transform: translate(-50%, -50%) rotate(45deg);
      background-color: var(--important-color);
    }
    span:nth-child(2) {
      opacity: 0;
    }
    span:last-child {
      top: 50%;
      transform: translate(-50%, -50%) rotate(-45deg);
      background-color: var(--important-color);
    }
  }

  .desktop-menu {
    display: none;
  }

  .menu {
    list-style: none;
    margin: 0;
    padding: 5rem 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 3rem;
    position: absolute;
    width: 100vw;
    min-height: 100vh;
    top: 100%;
    left: 0;
    background-color: var(--white);
    z-index: -3;
    transition: 0.5s ease;
    opacity: 0;
    overflow: auto;
  }

  .show {
    opacity: 1;
    transition: 0.5s ease;
    z-index: 10;
  }

  #plant {
    width: 30%;
    height: auto;
  }

  @include breakpoint-up($breakpoint-tablet) {
    .desktop-menu {
      display: flex;
      align-items: center;
      gap: 3rem;
      white-space: nowrap;
    }

    .mobile-menu {
      display: none;
    }

    .desktop-menu ul {
      list-style: none;
      margin: 0;
      padding: 0;
      display: flex;
      gap: 3rem;
      align-items: center;
    }
  }
</style>
